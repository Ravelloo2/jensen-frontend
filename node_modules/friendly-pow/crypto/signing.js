import Crypto from './hmacSHA256';
import { constantTimeStringEquality } from './compare';
export function generatePuzzleBufferSignature(base64PuzzleBuffer, signingSecret) {
    const hmac = Crypto.HmacSHA256(base64PuzzleBuffer, signingSecret);
    // The digest hex encoded is 64 characters for HMAC-256.
    const digest = hmac.toString(Crypto.enc.Hex);
    // Take the first half as this is HMAC-SHA256-128
    return digest.slice(0, 32);
}
export function checkSignature(base64PuzzleBuffer, signature, signingSecret) {
    const expectedSignature = generatePuzzleBufferSignature(base64PuzzleBuffer, signingSecret);
    return constantTimeStringEquality(signature, expectedSignature);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbmluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jcnlwdG8vc2lnbmluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLE1BQU0sTUFBTSxjQUFjLENBQUM7QUFDbEMsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRXZELE1BQU0sVUFBVSw2QkFBNkIsQ0FBQyxrQkFBMEIsRUFBRSxhQUFxQjtJQUMzRixNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ2xFLHdEQUF3RDtJQUN4RCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFN0MsaURBQWlEO0lBQ2pELE9BQU8sTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDL0IsQ0FBQztBQUVELE1BQU0sVUFBVSxjQUFjLENBQUMsa0JBQTBCLEVBQUUsU0FBaUIsRUFBRSxhQUFxQjtJQUMvRixNQUFNLGlCQUFpQixHQUFHLDZCQUE2QixDQUFDLGtCQUFrQixFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQzNGLE9BQU8sMEJBQTBCLENBQUMsU0FBUyxFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFDcEUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDcnlwdG8gZnJvbSAnLi9obWFjU0hBMjU2JztcclxuaW1wb3J0IHsgY29uc3RhbnRUaW1lU3RyaW5nRXF1YWxpdHkgfSBmcm9tICcuL2NvbXBhcmUnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlUHV6emxlQnVmZmVyU2lnbmF0dXJlKGJhc2U2NFB1enpsZUJ1ZmZlcjogc3RyaW5nLCBzaWduaW5nU2VjcmV0OiBzdHJpbmcpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgaG1hYyA9IENyeXB0by5IbWFjU0hBMjU2KGJhc2U2NFB1enpsZUJ1ZmZlciwgc2lnbmluZ1NlY3JldCk7XHJcbiAgICAvLyBUaGUgZGlnZXN0IGhleCBlbmNvZGVkIGlzIDY0IGNoYXJhY3RlcnMgZm9yIEhNQUMtMjU2LlxyXG4gICAgY29uc3QgZGlnZXN0ID0gaG1hYy50b1N0cmluZyhDcnlwdG8uZW5jLkhleCk7XHJcblxyXG4gICAgLy8gVGFrZSB0aGUgZmlyc3QgaGFsZiBhcyB0aGlzIGlzIEhNQUMtU0hBMjU2LTEyOFxyXG4gICAgcmV0dXJuIGRpZ2VzdC5zbGljZSgwLCAzMik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjaGVja1NpZ25hdHVyZShiYXNlNjRQdXp6bGVCdWZmZXI6IHN0cmluZywgc2lnbmF0dXJlOiBzdHJpbmcsIHNpZ25pbmdTZWNyZXQ6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgY29uc3QgZXhwZWN0ZWRTaWduYXR1cmUgPSBnZW5lcmF0ZVB1enpsZUJ1ZmZlclNpZ25hdHVyZShiYXNlNjRQdXp6bGVCdWZmZXIsIHNpZ25pbmdTZWNyZXQpO1xyXG4gICAgcmV0dXJuIGNvbnN0YW50VGltZVN0cmluZ0VxdWFsaXR5KHNpZ25hdHVyZSwgZXhwZWN0ZWRTaWduYXR1cmUpO1xyXG59Il19